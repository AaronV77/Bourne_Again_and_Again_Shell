back#- This command will return you to the previous path that you were at. Takes no other arguments.#
bash#- This command will launch an instance of bash. Takes no other commands or arguments with it.#
cd#- This command will move the user throughout the file hierarchy. Takes one argument and should be a path or directory.#
color#- The command when ran by itself will turn the color on or off. If you give the command a number between 0 - 15 will change the color of the output on the terminal.#
commands#- This command will display all the special commands that Thursday can take. Takes no other arguments.#
compress#- This command will compress a directory / folder for the user. Takes one argument and is the file / directory that you want to compress.#
cp#- This command will copy any folder or file to the location that the user wants to put the contents in. This command takes can take up to three arguments, the first two are required, the third is optional. The first argument is the file / folder that you want to copy, the second is the destination of where to put that file / folder to. Lastly the third argument is the -m argument, which will move the user into that directory.#
date#- This command will display the current date. Takes no other arguments.#
decompress#- This command will decompress a file for the user. Takes one argument, and is the file you want to decompress.#
debug#- This command will turn on or off all of the debug statements within the program. Takes no other commands with it.#
decrypt#- This command will take a message and decrypt it using a key. Takes two arguments, the first is the key and the second is the string you want to decrypt.#
encrypt#- This command will take a message and encrypt it using a key. Takes two arguments, the first is the key and the second is the string you want to encrypt.#
exit#- This command will close out the program.#
find#- This command will take a file or folder and search through the file system. If you don't give this command a starting point then it will start at the root directory. Either give the find command a starting point and then a file / folder you are looking for, or just the file / folder you are looking for.#
getenv#- This command will retrieve a system global variable. Takes one argument and it being the variable that you are looking for.#
hd#- This command will display the home directory of the user. Takes no other commands with it. Takes no other arguments.#
help#- This command will take a command name that the user is looking for more information on. This command only takes one argument and it is the command that you are looking for more information on.#
info#- This command will display all the information of the program process. Takes no other arguments.#
ls#- This command will display the contents of a directory. Takes one argument and it can either be -l or all. The first option -l will give you extra information about the files, and all will display all the directories in the current file system.#
mv#- This command will move any folder or file to the location that the user wants to put the contents in. This command takes can take up to three arguments, the first two are required, the third is optional. The first argument is the file / folder that you want to copy, the second is the destination of where to put that file / folder to. Lastly the third argument is the -m argument, which will move the user into that directory.#
pid#- This command will output the process ID number. Takes no other arguments.#
ppid#- This command will output the parent process ID number. Takes no other arguments.#
printenv#- This command will print all the bash global variables. Takes no other arguments.#
prompt#- This command will change the command prompt. Takes one argument and it is a number between 0 - 5. The first four options (0 -4) will change the users prompt, the last option (5) will set the custom prompt.#
rm#- This command will remove any file or directory without any extra arguments. Takes one argument, either a folder or file.#
search#- This command will search the dictionary for a meaning of the given word. Takes one argument and is the word you are searching for.#
setenv#- This command will set an environment variable to the bash global system. Takes two arguments, the first being the name of the variable and the second being the value for the variable. The system will not allow you to have two of the same global variable name.#
shutdown# - This command will shutdown the machine simply with one command. Takes no other arguments.#
time#- This command will display the current time. Takes no other arguments.#
uid#- This command will display the user ID number. Takes no other arguments.#
usage#- This command will print out the basic details of Thursday. Takes no other arguments.#
unset#- This command will erase an environment variable and its value. Takes one argument and it is the variable that you want to unset.#
wd#- This command displays the current working directory. Takes no other arguments.#
